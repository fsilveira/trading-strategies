// ============================================================================
// üìä ESTRAT√âGIA OPENING RANGE BREAKOUT (ORB) - DAY TRADING
// ============================================================================
//
// üéØ PROP√ìSITO:
// Esta estrat√©gia implementa o Opening Range Breakout (ORB) para day trading,
// baseada na volatilidade do in√≠cio do preg√£o. Identifica a faixa de abertura
// e opera breakouts na dire√ß√£o do primeiro movimento.
//
// üîß FUNCIONAMENTO:
// 1. OPENING RANGE: Define faixa de abertura nos primeiros X minutos (padr√£o: 5min)
// 2. DIRE√á√ÉO: Se primeiro candle for positivo = bias bullish, negativo = bearish
// 3. ENTRADA: No rompimento da m√°xima (long) ou m√≠nima (short) do range
// 4. STOP LOSS: Na extremidade oposta do opening range
// 5. TAKE PROFIT: 10x o risco (10R) ou fechamento do dia
//
// üìà CARACTER√çSTICAS:
// - Baseada em volatilidade do in√≠cio do preg√£o
// - Stop loss claro (tamanho do opening range)
// - Take profit agressivo (10:1 risk/reward)
// - Filtro de dire√ß√£o baseado no primeiro candle
// - Gest√£o de risco autom√°tica
//
// ‚è∞ TIMEFRAME IDEAL: M5, M15 (para ORB de 5-15 minutos)
// üí± PARES RECOMENDADOS: EUR/USD, GBP/USD, USD/JPY, SPX, NASDAQ
// üéØ TIPO: Day Trading - Breakout
// ‚≠ê DIFICULDADE: ‚≠ê‚≠ê (Intermedi√°rio)
//
// üìä PERFORMANCE ESPERADA:
// - Alpha anualizado: 33-48% (baseado em estudos com QQQ/TQQQ)
// - Win Rate: 45-65% (dependendo do mercado)
// - Risk/Reward: 1:10 (muito agressivo)
// - Ideal para: Day traders experientes
//
// ============================================================================

//@version=5
strategy("ORB Breakout Strategy", shorttitle="ORB", overlay=true, 
         default_qty_type=strategy.percent_of_equity, default_qty_value=100,
         initial_capital=25000, currency=currency.USD, commission_type=strategy.commission.cash_per_contract, 
         commission_value=0.0005, slippage=2)

// ============================================================================
// üìã INPUTS
// ============================================================================

// Configura√ß√µes do Opening Range
orb_length = input.int(5, "Dura√ß√£o ORB (minutos)", minval=1, maxval=60, group="ORB Settings")
orb_timeframe = input.timeframe("5", "Timeframe ORB", group="ORB Settings")

// Configura√ß√µes de Risco
risk_percent = input.float(1.0, "Risco por Trade (%)", minval=0.1, maxval=5.0, step=0.1, group="Risk Management")
risk_reward_ratio = input.float(10.0, "Risk/Reward Ratio", minval=1.0, maxval=20.0, step=0.5, group="Risk Management")
max_leverage = input.float(4.0, "Alavancagem M√°xima", minval=1.0, maxval=10.0, step=0.5, group="Risk Management")

// Filtros
use_volume_filter = input.bool(true, "Usar Filtro de Volume", group="Filters")
min_volume_multiplier = input.float(1.2, "M√∫ltiplo Volume M√≠nimo", minval=1.0, maxval=3.0, step=0.1, group="Filters")
use_session_filter = input.bool(true, "Filtrar por Sess√£o", group="Filters")
session_start = input.session("0900-1600", "Sess√£o de Trading", group="Filters")

// Visualiza√ß√£o
show_orb_range = input.bool(true, "Mostrar Opening Range", group="Visualization")
show_signals = input.bool(true, "Mostrar Sinais", group="Visualization")

// ============================================================================
// üìä VARI√ÅVEIS E C√ÅLCULOS
// ============================================================================

// Detectar in√≠cio do dia
is_new_day = ta.change(time("1D")) != 0
is_first_candle = is_new_day

// Calcular Opening Range
var float orb_high = na
var float orb_low = na
var int orb_start_bar = na
var bool orb_direction_bullish = na

if is_first_candle
    orb_high := high
    orb_low := low
    orb_start_bar := bar_index
    orb_direction_bullish := close > open  // Primeiro candle determina dire√ß√£o
else if bar_index - orb_start_bar < orb_length
    orb_high := math.max(orb_high, high)
    orb_low := math.min(orb_low, low)

// Detectar fim do Opening Range
orb_complete = bar_index - orb_start_bar >= orb_length
orb_range_size = orb_high - orb_low

// Calcular volume m√©dio para filtro
avg_volume = ta.sma(volume, 20)
volume_ok = not use_volume_filter or volume >= avg_volume * min_volume_multiplier

// Filtro de sess√£o
in_session = not use_session_filter or time(timeframe.period, session_start)

// ============================================================================
// üéØ L√ìGICA DE ENTRADA
// ============================================================================

// Condi√ß√µes para Long
long_condition = orb_complete and 
                 orb_direction_bullish and 
                 close > orb_high and 
                 volume_ok and 
                 in_session and
                 strategy.position_size == 0

// Condi√ß√µes para Short
short_condition = orb_complete and 
                  not orb_direction_bullish and 
                  close < orb_low and 
                  volume_ok and 
                  in_session and
                  strategy.position_size == 0

// ============================================================================
// üí∞ GEST√ÉO DE RISCO
// ============================================================================

// Calcular tamanho da posi√ß√£o baseado no risco
calculate_position_size(risk_amount, stop_distance) =>
    if stop_distance > 0
        risk_amount / stop_distance
    else
        0

// Stop Loss e Take Profit
long_stop = orb_low
short_stop = orb_high
long_target = close + (close - long_stop) * risk_reward_ratio
short_target = close - (short_stop - close) * risk_reward_ratio

// ============================================================================
// üìà EXECU√á√ÉO DAS ORDENS
// ============================================================================

// Entrada Long
if long_condition
    risk_amount = strategy.equity * risk_percent / 100
    stop_distance = close - long_stop
    position_size = calculate_position_size(risk_amount, stop_distance)
    
    strategy.entry("Long", strategy.long, qty=position_size)
    strategy.exit("Long Exit", "Long", stop=long_stop, limit=long_target)

// Entrada Short
if short_condition
    risk_amount = strategy.equity * risk_percent / 100
    stop_distance = short_stop - close
    position_size = calculate_position_size(risk_amount, stop_distance)
    
    strategy.entry("Short", strategy.short, qty=position_size)
    strategy.exit("Short Exit", "Short", stop=short_stop, limit=short_target)

// Fechar posi√ß√µes no final do dia
if is_new_day and strategy.position_size != 0
    strategy.close_all("End of Day")

// ============================================================================
// üé® VISUALIZA√á√ÉO
// ============================================================================

// Plotar Opening Range
orb_color = orb_direction_bullish ? color.new(color.green, 70) : color.new(color.red, 70)
if show_orb_range and orb_complete
    line.new(orb_start_bar, orb_high, bar_index, orb_high, color=orb_color, width=2, style=line.style_dashed)
    line.new(orb_start_bar, orb_low, bar_index, orb_low, color=orb_color, width=2, style=line.style_dashed)
    
    // Preencher √°rea do range
    fill_color = orb_direction_bullish ? color.new(color.green, 85) : color.new(color.red, 85)
    box.new(orb_start_bar, orb_high, bar_index, orb_low, border_color=orb_color, bgcolor=fill_color)

// Plotar sinais
plotshape(show_signals and long_condition, "Long Signal", shape.triangleup, location.belowbar, color.green, size=size.normal)
plotshape(show_signals and short_condition, "Short Signal", shape.triangledown, location.abovebar, color.red, size=size.normal)

// Plotar stop loss e take profit
plot(strategy.position_size > 0 ? long_stop : na, "Long Stop", color.red, linewidth=2, style=plot.style_linebr)
plot(strategy.position_size > 0 ? long_target : na, "Long Target", color.green, linewidth=2, style=plot.style_linebr)
plot(strategy.position_size < 0 ? short_stop : na, "Short Stop", color.red, linewidth=2, style=plot.style_linebr)
plot(strategy.position_size < 0 ? short_target : na, "Short Target", color.green, linewidth=2, style=plot.style_linebr)

// ============================================================================
// üìä ALERTAS
// ============================================================================

alertcondition(long_condition, "ORB Long Signal", "ORB: Sinal de Compra - Rompimento da m√°xima do range")
alertcondition(short_condition, "ORB Short Signal", "ORB: Sinal de Venda - Rompimento da m√≠nima do range")
alertcondition(strategy.position_size != 0 and is_new_day, "ORB End of Day", "ORB: Fechar posi√ß√µes - Final do dia")

// ============================================================================
// üìà M√âTRICAS DE PERFORMANCE
// ============================================================================

// Calcular m√©tricas
total_trades = strategy.closedtrades
winning_trades = strategy.wintrades
losing_trades = strategy.losstrades
win_rate = total_trades > 0 ? winning_trades / total_trades * 100 : 0
avg_win = strategy.wintrades > 0 ? strategy.grossprofit / strategy.wintrades : 0
avg_loss = strategy.losstrades > 0 ? strategy.grossloss / strategy.losstrades : 0
profit_factor = strategy.grossloss != 0 ? strategy.grossprofit / math.abs(strategy.grossloss) : 0

// Exibir m√©tricas no gr√°fico
if barstate.islast
    var table info_table = table.new(position.top_right, 2, 8, bgcolor=color.white, border_width=1)
    table.cell(info_table, 0, 0, "M√©trica", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 0, "Valor", text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 1, "Total Trades", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 1, str.tostring(total_trades), text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 2, "Win Rate", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 2, str.tostring(win_rate, "#.##") + "%", text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 3, "Profit Factor", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 3, str.tostring(profit_factor, "#.##"), text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 4, "Avg Win", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 4, str.tostring(avg_win, "#.##"), text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 5, "Avg Loss", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 5, str.tostring(avg_loss, "#.##"), text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 6, "Net Profit", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 6, str.tostring(strategy.netprofit, "#.##"), text_color=color.black, text_size=size.small)
    table.cell(info_table, 0, 7, "Max DD", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 7, str.tostring(strategy.max_drawdown, "#.##"), text_color=color.black, text_size=size.small)
